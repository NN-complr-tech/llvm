# This is the CMakeCache file.
# For build in directory: d:/llvm/llvm-nnsu-2024/compiler-rt/out/build/x64-Debug
# It was generated by CMake: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/lib.exe

//ASM compiler
CMAKE_ASM_COMPILER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:STRING=Debug

//CXX compiler
CMAKE_CXX_COMPILER:STRING=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//C++ standard to conform to
CMAKE_CXX_STANDARD:STRING=17

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//C compiler
CMAKE_C_COMPILER:STRING=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//No help, variable specified on the command line.
CMAKE_INSTALL_PREFIX:PATH=D:/llvm/llvm-nnsu-2024/compiler-rt/out/install/x64-Debug

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/link.exe

//path to the lipo tool
CMAKE_LIPO:PATH=lipo

//make program
CMAKE_MAKE_PROGRAM:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.19041.0/x64/mt.exe

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=CompilerRT

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.19041.0/x64/rc.exe

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Build for a bare-metal target.
COMPILER_RT_BAREMETAL_BUILD:BOOL=OFF

//Build builtins
COMPILER_RT_BUILD_BUILTINS:BOOL=ON

//Build GWP-ASan, and link it into SCUDO
COMPILER_RT_BUILD_GWP_ASAN:BOOL=ON

//Build libFuzzer
COMPILER_RT_BUILD_LIBFUZZER:BOOL=ON

//Build memory profiling runtime
COMPILER_RT_BUILD_MEMPROF:BOOL=ON

//Build ORC runtime
COMPILER_RT_BUILD_ORC:BOOL=ON

//Build profile runtime
COMPILER_RT_BUILD_PROFILE:BOOL=ON

//Build sanitizers
COMPILER_RT_BUILD_SANITIZERS:BOOL=ON

//Build SCUDO standalone with LLVM's libc headers
COMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC:BOOL=OFF

//Build standalone shared atomic library.
COMPILER_RT_BUILD_STANDALONE_LIBATOMIC:BOOL=OFF

//Build xray
COMPILER_RT_BUILD_XRAY:BOOL=ON

//Build xray with no preinit patching
COMPILER_RT_BUILD_XRAY_NO_PREINIT:BOOL=OFF

//Turns on or off -fPIC for the builtin library source
COMPILER_RT_BUILTINS_ENABLE_PIC:BOOL=ON

//Do not export any symbols from the static library.
COMPILER_RT_BUILTINS_HIDE_SYMBOLS:BOOL=ON

//Can we execute instrumented tests
COMPILER_RT_CAN_EXECUTE_TESTS:BOOL=ON

//Specify C++ library to use. Supported values are none;default;libcxx.
COMPILER_RT_CXX_LIBRARY:STRING=default

//Build runtimes with full debug info
COMPILER_RT_DEBUG:BOOL=OFF

//Build builtins only for the default target
COMPILER_RT_DEFAULT_TARGET_ONLY:BOOL=OFF

//Default triple for which compiler-rt runtimes will be built.
COMPILER_RT_DEFAULT_TARGET_TRIPLE:STRING=x86_64-pc-windows-msvc

//Disable AArch64 Function Multi Versioning support
COMPILER_RT_DISABLE_AARCH64_FMV:BOOL=OFF

//Build Compiler RT with CET enabled
COMPILER_RT_ENABLE_CET:BOOL=OFF

//Enable the int128 builtin routines for all targets.
COMPILER_RT_ENABLE_SOFTWARE_INT128:BOOL=OFF

//Fail and stop if warning is triggered
COMPILER_RT_ENABLE_WERROR:BOOL=OFF

//Skip the atomic builtin (these should normally be provided by
// a shared library)
COMPILER_RT_EXCLUDE_ATOMIC_BUILTIN:BOOL=ON

//Path where built compiler-rt executables should be stored.
COMPILER_RT_EXEC_OUTPUT_DIR:PATH=D:/llvm/llvm-nnsu-2024/compiler-rt/out/build/x64-Debug/bin

//Generate dSYM files and strip executables and libraries (Darwin
// Only)
COMPILER_RT_EXTERNALIZE_DEBUGINFO:BOOL=OFF

//Enable libc interceptors in HWASan (testing mode)
COMPILER_RT_HWASAN_WITH_INTERCEPTORS:BOOL=ON

//Generate and build compiler-rt unit tests.
COMPILER_RT_INCLUDE_TESTS:BOOL=OFF

//Path where built compiler-rt executables should be installed.
COMPILER_RT_INSTALL_BINARY_DIR:PATH=bin

//Path where compiler-rt data files should be installed.
COMPILER_RT_INSTALL_DATA_DIR:PATH=share

//Path where compiler-rt headers should be installed.
COMPILER_RT_INSTALL_INCLUDE_DIR:PATH=include

//Path where built compiler-rt libraries should be installed.
COMPILER_RT_INSTALL_LIBRARY_DIR:PATH=lib/windows

//Prefix for directories where built compiler-rt artifacts should
// be installed.
COMPILER_RT_INSTALL_PATH:PATH=

//Support interception of libdispatch (GCD). Requires '-fblocks'
COMPILER_RT_INTERCEPT_LIBDISPATCH:BOOL=OFF

//Specify if libdispatch is installed in a custom location
COMPILER_RT_LIBDISPATCH_INSTALL_PATH:BOOL=OFF

//Path where built compiler-rt libraries should be stored.
COMPILER_RT_OUTPUT_DIR:PATH=D:/llvm/llvm-nnsu-2024/compiler-rt/out/build/x64-Debug

//sanitizers to build if supported on the target (all;asan;dfsan;msan;hwasan;tsan;safestack;cfi;scudo_standalone;ubsan_minimal;gwp_asan;asan_abi)
COMPILER_RT_SANITIZERS_TO_BUILD:STRING=all

//Build SCUDO standalone for shared libraries
COMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED:BOOL=ON

//Set custom sysroot for building SCUDO standalone
COMPILER_RT_SCUDO_STANDALONE_SYSROOT_PATH:BOOL=OFF

//Statically link the C++ library.
COMPILER_RT_STATIC_CXX_LIBRARY:BOOL=OFF

//Compiler to use for testing
COMPILER_RT_TEST_COMPILER:PATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe

//C++ Compiler to use for testing
COMPILER_RT_TEST_CXX_COMPILER:PATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe

//Use compiler-rt builtins instead of libgcc
COMPILER_RT_USE_BUILTINS_LIBRARY:BOOL=OFF

//Enable compiler-rt to use libc++ from the source tree
COMPILER_RT_USE_LIBCXX:BOOL=ON

//Use the LLVM unwinder.
COMPILER_RT_USE_LLVM_UNWINDER:BOOL=OFF

//Value Computed by CMake
CompilerRT_BINARY_DIR:STATIC=D:/llvm/llvm-nnsu-2024/compiler-rt/out/build/x64-Debug

//Value Computed by CMake
CompilerRT_SOURCE_DIR:STATIC=D:/llvm/llvm-nnsu-2024/compiler-rt

//GNU ld
GNU_LD_EXECUTABLE:FILEPATH=GNU_LD_EXECUTABLE-NOTFOUND

//GNU gold
GOLD_EXECUTABLE:FILEPATH=GOLD_EXECUTABLE-NOTFOUND

//Path to LLVM build tree
LLVM_BINARY_DIR:PATH=C:/Program Files (x86)/LLVM

//The directory containing a CMake configuration file for LLVM.
LLVM_DIR:PATH=C:/Program Files (x86)/LLVM/lib/cmake/llvm

//Path to llvm/include and any other header dirs needed
LLVM_INCLUDE_DIR:PATH=C:/Program Files (x86)/LLVM/include

//Path to llvm/lib
LLVM_LIBRARY_DIR:PATH=C:/Program Files (x86)/LLVM/lib

//Default options for lit
LLVM_LIT_ARGS:STRING=-sv --no-progress-bar

//Path to LLVM source tree
LLVM_MAIN_SRC_DIR:PATH=D:/llvm/llvm-nnsu-2024/llvm

//Path to llvm/bin
LLVM_TOOLS_BINARY_DIR:PATH=C:/Program Files (x86)/LLVM/bin

//If set, argument to clang-cl's /winsysroot
LLVM_WINSYSROOT:STRING=

//Path to the DIA SDK
MSVC_DIA_SDK_DIR:PATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/DIA SDK

//Allow use of C++ ABI details in ubsan
SANITIZER_ALLOW_CXXABI:BOOL=ON

//Specify C++ ABI library to use.
SANITIZER_CXX_ABI:STRING=default

//Report error on unresolved symbol references
SANITIZER_NO_UNDEFINED_SYMBOLS:BOOL=OFF

//Specify C++ library to use for tests.
SANITIZER_TEST_CXX:STRING=default

//Use static libc++abi.
SANITIZER_USE_STATIC_CXX_ABI:BOOL=OFF

//Use static LLVM unwinder.
SANITIZER_USE_STATIC_LLVM_UNWINDER:BOOL=OFF

//Use static libc++ for tests.
SANITIZER_USE_STATIC_TEST_CXX:BOOL=OFF


########################
# INTERNAL cache entries
########################

//Test -Warray-bounds
-Warray-bounds:INTERNAL=
//Test -Warray-bounds-pointer-arithmetic
-Warray-bounds-pointer-arithmetic:INTERNAL=
//Test -Wbuiltin-memcpy-chk-size
-Wbuiltin-memcpy-chk-size:INTERNAL=
//Test -Wempty-body
-Wempty-body:INTERNAL=
//Test -Wformat-insufficient-args
-Wformat-insufficient-args:INTERNAL=
//Test -Wformat-security
-Wformat-security:INTERNAL=
//Test -Wreturn-stack-address
-Wreturn-stack-address:INTERNAL=
//Test -Wshadow
-Wshadow:INTERNAL=
//Test -Wsizeof-array-argument
-Wsizeof-array-argument:INTERNAL=
//Test -Wsizeof-array-decay
-Wsizeof-array-decay:INTERNAL=
//Test -Wsizeof-array-div
-Wsizeof-array-div:INTERNAL=
//Test -Wsizeof-pointer-div
-Wsizeof-pointer-div:INTERNAL=
//Test -Wsizeof-pointer-memaccess
-Wsizeof-pointer-memaccess:INTERNAL=
//Test -Wsuspicious-memaccess
-Wsuspicious-memaccess:INTERNAL=
//Test -Wuninitialized
-Wuninitialized:INTERNAL=
//Test -ftrivial-auto-var-init=pattern
-ftrivial-auto-var-init=pattern:INTERNAL=
//Result of TRY_COMPILE
CAN_TARGET_x86_64:INTERNAL=TRUE
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=d:/llvm/llvm-nnsu-2024/compiler-rt/out/build/x64-Debug
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=20
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=21032501
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=D:/llvm/llvm-nnsu-2024/compiler-rt
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=20
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.20
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_BUILTINS
COMPILER_RT_BUILD_BUILTINS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_GWP_ASAN
COMPILER_RT_BUILD_GWP_ASAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_LIBFUZZER
COMPILER_RT_BUILD_LIBFUZZER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_MEMPROF
COMPILER_RT_BUILD_MEMPROF-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_ORC
COMPILER_RT_BUILD_ORC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_PROFILE
COMPILER_RT_BUILD_PROFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_SANITIZERS
COMPILER_RT_BUILD_SANITIZERS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC
COMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_XRAY
COMPILER_RT_BUILD_XRAY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_BUILD_XRAY_NO_PREINIT
COMPILER_RT_BUILD_XRAY_NO_PREINIT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_DISABLE_AARCH64_FMV
COMPILER_RT_DISABLE_AARCH64_FMV-ADVANCED:INTERNAL=1
//Compiler supports 
COMPILER_RT_HAS_ASM_LSE:INTERNAL=False
//Compiler supports 
COMPILER_RT_HAS_ATOMIC_KEYWORD:INTERNAL=False
//Have includes sys/auxv.h
COMPILER_RT_HAS_AUXV:INTERNAL=
//Test COMPILER_RT_HAS_EXTERNAL_FLAG
COMPILER_RT_HAS_EXTERNAL_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_FCF_PROTECTION_FLAG
COMPILER_RT_HAS_FCF_PROTECTION_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FFREESTANDING_FLAG
COMPILER_RT_HAS_FFREESTANDING_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_BUILTIN_FLAG
COMPILER_RT_HAS_FNO_BUILTIN_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_COVERAGE_MAPPING_FLAG
COMPILER_RT_HAS_FNO_COVERAGE_MAPPING_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_EXCEPTIONS_FLAG
COMPILER_RT_HAS_FNO_EXCEPTIONS_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_FUNCTION_SECTIONS_FLAG
COMPILER_RT_HAS_FNO_FUNCTION_SECTIONS_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_LTO_FLAG
COMPILER_RT_HAS_FNO_LTO_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_PARTIAL_INLINING_FLAG
COMPILER_RT_HAS_FNO_PARTIAL_INLINING_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_PROFILE_GENERATE_FLAG
COMPILER_RT_HAS_FNO_PROFILE_GENERATE_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_PROFILE_INSTR_GENERATE_FLAG
COMPILER_RT_HAS_FNO_PROFILE_INSTR_GENERATE_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_PROFILE_INSTR_USE_FLAG
COMPILER_RT_HAS_FNO_PROFILE_INSTR_USE_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_RTTI_FLAG
COMPILER_RT_HAS_FNO_RTTI_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_SANITIZE_SAFE_STACK_FLAG
COMPILER_RT_HAS_FNO_SANITIZE_SAFE_STACK_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FNO_STACK_PROTECTOR_FLAG
COMPILER_RT_HAS_FNO_STACK_PROTECTOR_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FOMIT_FRAME_POINTER_FLAG
COMPILER_RT_HAS_FOMIT_FRAME_POINTER_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FPIC_FLAG
COMPILER_RT_HAS_FPIC_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FPIE_FLAG
COMPILER_RT_HAS_FPIE_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FRTTI_FLAG
COMPILER_RT_HAS_FRTTI_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FTLS_MODEL_INITIAL_EXEC
COMPILER_RT_HAS_FTLS_MODEL_INITIAL_EXEC:INTERNAL=
//Have symbol __func__
COMPILER_RT_HAS_FUNC_SYMBOL:INTERNAL=1
//Test COMPILER_RT_HAS_FUNWIND_TABLES_FLAG
COMPILER_RT_HAS_FUNWIND_TABLES_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FUSE_LD_LLD_FLAG
COMPILER_RT_HAS_FUSE_LD_LLD_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_FVISIBILITY_HIDDEN_FLAG
COMPILER_RT_HAS_FVISIBILITY_HIDDEN_FLAG:INTERNAL=
//Have library gcc_s
COMPILER_RT_HAS_GCC_S_LIB:INTERNAL=
//Test COMPILER_RT_HAS_GLINE_TABLES_ONLY_FLAG
COMPILER_RT_HAS_GLINE_TABLES_ONLY_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_GR_FLAG
COMPILER_RT_HAS_GR_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_GS_FLAG
COMPILER_RT_HAS_GS_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_G_FLAG
COMPILER_RT_HAS_G_FLAG:INTERNAL=
//Have library c
COMPILER_RT_HAS_LIBC:INTERNAL=
//Have library c++
COMPILER_RT_HAS_LIBCXX:INTERNAL=
//Have library dl
COMPILER_RT_HAS_LIBDL:INTERNAL=
//Have library execinfo
COMPILER_RT_HAS_LIBEXECINFO:INTERNAL=
//Have library m
COMPILER_RT_HAS_LIBM:INTERNAL=
//Have library pthread
COMPILER_RT_HAS_LIBPTHREAD:INTERNAL=
//Have library rt
COMPILER_RT_HAS_LIBRT:INTERNAL=
//Have library stdc++
COMPILER_RT_HAS_LIBSTDCXX:INTERNAL=
//Test COMPILER_RT_HAS_MCRC32_FLAG
COMPILER_RT_HAS_MCRC32_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_MCRC_FLAG
COMPILER_RT_HAS_MCRC_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_MSSE4_2_FLAG
COMPILER_RT_HAS_MSSE4_2_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_MT_FLAG
COMPILER_RT_HAS_MT_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_NOSTDINCXX_FLAG
COMPILER_RT_HAS_NOSTDINCXX_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_NOSTDLIBXX_FLAG
COMPILER_RT_HAS_NOSTDLIBXX_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_OMIT_FRAME_POINTER_FLAG
COMPILER_RT_HAS_OMIT_FRAME_POINTER_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_Oy_FLAG
COMPILER_RT_HAS_Oy_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_STD_C11_FLAG
COMPILER_RT_HAS_STD_C11_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_SYSROOT_FLAG
COMPILER_RT_HAS_SYSROOT_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_VERSION_SCRIPT
COMPILER_RT_HAS_VERSION_SCRIPT:INTERNAL=
//Compiler supports -fvisibility=hidden
COMPILER_RT_HAS_VISIBILITY_HIDDEN_FLAG:INTERNAL=False
//Test COMPILER_RT_HAS_W4_FLAG
COMPILER_RT_HAS_W4_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WALL_FLAG
COMPILER_RT_HAS_WALL_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WC99_EXTENSIONS_FLAG
COMPILER_RT_HAS_WC99_EXTENSIONS_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WCOVERED_SWITCH_DEFAULT_FLAG
COMPILER_RT_HAS_WCOVERED_SWITCH_DEFAULT_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WD4146_FLAG
COMPILER_RT_HAS_WD4146_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WD4206_FLAG
COMPILER_RT_HAS_WD4206_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WD4221_FLAG
COMPILER_RT_HAS_WD4221_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WD4291_FLAG
COMPILER_RT_HAS_WD4291_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WD4391_FLAG
COMPILER_RT_HAS_WD4391_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WD4722_FLAG
COMPILER_RT_HAS_WD4722_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WD4800_FLAG
COMPILER_RT_HAS_WD4800_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_WERROR_FLAG
COMPILER_RT_HAS_WERROR_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WFRAME_LARGER_THAN_FLAG
COMPILER_RT_HAS_WFRAME_LARGER_THAN_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WGLOBAL_CONSTRUCTORS_FLAG
COMPILER_RT_HAS_WGLOBAL_CONSTRUCTORS_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WGNU_FLAG
COMPILER_RT_HAS_WGNU_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WNO_FORMAT
COMPILER_RT_HAS_WNO_FORMAT:INTERNAL=
//Test COMPILER_RT_HAS_WNO_FORMAT_PEDANTIC
COMPILER_RT_HAS_WNO_FORMAT_PEDANTIC:INTERNAL=
//Test COMPILER_RT_HAS_WNO_PEDANTIC
COMPILER_RT_HAS_WNO_PEDANTIC:INTERNAL=
//Test COMPILER_RT_HAS_WSUGGEST_OVERRIDE_FLAG
COMPILER_RT_HAS_WSUGGEST_OVERRIDE_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WTHREAD_SAFETY_BETA_FLAG
COMPILER_RT_HAS_WTHREAD_SAFETY_BETA_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WTHREAD_SAFETY_FLAG
COMPILER_RT_HAS_WTHREAD_SAFETY_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WTHREAD_SAFETY_REFERENCE_FLAG
COMPILER_RT_HAS_WTHREAD_SAFETY_REFERENCE_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WUNUSED_PARAMETER_FLAG
COMPILER_RT_HAS_WUNUSED_PARAMETER_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WVARIADIC_MACROS_FLAG
COMPILER_RT_HAS_WVARIADIC_MACROS_FLAG:INTERNAL=
//Test COMPILER_RT_HAS_WX_FLAG
COMPILER_RT_HAS_WX_FLAG:INTERNAL=1
//Compiler supports -fxray-instrument
COMPILER_RT_HAS_XRAY_COMPILER_FLAG:INTERNAL=False
//Test COMPILER_RT_HAS_Z_TEXT
COMPILER_RT_HAS_Z_TEXT:INTERNAL=
//Test COMPILER_RT_HAS_Zi_FLAG
COMPILER_RT_HAS_Zi_FLAG:INTERNAL=1
//Test COMPILER_RT_HAS_x86_64_BFLOAT16
COMPILER_RT_HAS_x86_64_BFLOAT16:INTERNAL=
//Test COMPILER_RT_HAS_x86_64_FLOAT16
COMPILER_RT_HAS_x86_64_FLOAT16:INTERNAL=
//ADVANCED property for variable: COMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED
COMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COMPILER_RT_SCUDO_STANDALONE_SYSROOT_PATH
COMPILER_RT_SCUDO_STANDALONE_SYSROOT_PATH-ADVANCED:INTERNAL=1
//Test COMPILER_RT_TARGET_HAS_ATOMICS
COMPILER_RT_TARGET_HAS_ATOMICS:INTERNAL=1
//Test COMPILER_RT_TARGET_HAS_FCNTL_LCK
COMPILER_RT_TARGET_HAS_FCNTL_LCK:INTERNAL=
//Test COMPILER_RT_TARGET_HAS_UNAME
COMPILER_RT_TARGET_HAS_UNAME:INTERNAL=
//Test CXX_SUPPORTS_UNWINDLIB_NONE_FLAG
CXX_SUPPORTS_UNWINDLIB_NONE_FLAG:INTERNAL=
//Test C_SUPPORTS_NODEFAULTLIBS_FLAG
C_SUPPORTS_NODEFAULTLIBS_FLAG:INTERNAL=
//Details about finding Python3
FIND_PACKAGE_MESSAGE_DETAILS_Python3:INTERNAL=[C:/IT/python.exe][cfound components: Interpreter ][v3.8.5()]
//Test HAS_THREAD_LOCAL
HAS_THREAD_LOCAL:INTERNAL=1
//Have include rpc/xdr.h
HAVE_RPC_XDR_H:INTERNAL=
//Have include unwind.h
HAVE_UNWIND_H:INTERNAL=
//STRINGS property for variable: SANITIZER_CXX_ABI
SANITIZER_CXX_ABI-STRINGS:INTERNAL=none;default;libstdc++;libc++;libcxxabi
//STRINGS property for variable: SANITIZER_TEST_CXX
SANITIZER_TEST_CXX-STRINGS:INTERNAL=none;default;libstdc++;libc++
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=D:/llvm/llvm-nnsu-2024/compiler-rt/out/install/x64-Debug
//Path to a program.
_Python3_EXECUTABLE:INTERNAL=C:/IT/python.exe
//Python3 Properties
_Python3_INTERPRETER_PROPERTIES:INTERNAL=Python;3;8;5;64;;cp38-win_amd64;C:\IT\Lib;C:\IT\Lib;C:\IT\Lib\site-packages;C:\IT\Lib\site-packages
_Python3_INTERPRETER_SIGNATURE:INTERNAL=34c166ea4ac6a8a82c78979656d2febc

